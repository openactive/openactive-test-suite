name: Reference Implementation

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Checkout OpenActive Test Suite
      uses: actions/checkout@v2
      with:
        path: tests
    - name: Use matching coverage/* branch ${{ github.head_ref }} in OpenActive.Server.NET
      if: ${{ startsWith(github.head_ref, 'coverage/') }}
      id: refs
      run: echo "::set-output name=mirror_ref::${{ github.head_ref }}"
    - name: Checkout OpenActive.Server.NET ${{ steps.refs.outputs.mirror_ref }}
      uses: actions/checkout@v2
      with:
        repository: openactive/OpenActive.Server.NET
        ref: ${{ steps.refs.outputs.mirror_ref }}
        path: server

    - name: Setup .NET Core 2.1.808
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.808
    - name: Setup Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x


    - name: Build OpenActive.Server.NET Reference Implementation with dependencies
      run: dotnet build ./Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release
      working-directory: server
    - name: Start OpenActive.Server.NET Reference Implementation
      run: |
        dotnet run --project ./Examples/BookingSystem.AspNetCore/BookingSystem.AspNetCore.csproj --configuration Release --no-build &
      working-directory: server


    - name: Install OpenActive Test Suite
      run: | 
        npm install
      working-directory: tests
    - name: Run OpenActive Integration Tests in Random Mode
      run: npm start
      env:
        FORCE_COLOR: 1
        NODE_CONFIG: |
          {"outputPath": "../../publish/example-output/random/", "useRandomOpportunities": true, "generateConformanceCertificate": true, "conformanceCertificateId": "https://openactive.io/openactive-test-suite/example-output/random/certification/" }
        NODE_ENV: 
        NODE_APP_INSTANCE: ci
      working-directory: tests
    - name: Upload test output for Random Mode as artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() || failure() }}
      with:
        name: test-output-${{ matrix.os }}-random
        path: ./tests/publish/example-output/random/
      
    - name: Run OpenActive Integration Tests in Controlled Mode
      run: npm start
      env:
        FORCE_COLOR: 1
        NODE_CONFIG: |
          {"outputPath": "../../publish/example-output/controlled/", "useRandomOpportunities": false, "generateConformanceCertificate": true, "conformanceCertificateId": "https://openactive.io/openactive-test-suite/example-output/controlled/certification/" }
        NODE_ENV: 
        NODE_APP_INSTANCE: ci
      working-directory: tests
    - name: Upload test output for Controlled Mode as artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() || failure() }}
      with:
        name: test-output-${{ matrix.os }}-controlled
        path: ./tests/publish/example-output/controlled/

    - name: Deploy test output to GitHub Pages (master branch on ubuntu only)
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-latest' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./tests/publish
        force_orphan: true
        enable_jekyll: true
